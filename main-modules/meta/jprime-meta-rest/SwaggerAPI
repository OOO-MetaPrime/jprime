openapi: 3.0.0

servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/MetaPrime/JPrimeAPI/1.0.0

info:
  description: This is a JPrime REST API
  version: "1.0.0"
  title: JPrime REST API
  contact:
    email:  info@metaprime.ru
  license:
    name: Apache 2.0
    url: 'https://github.com/OOO-MetaPrime/jprime/blob/master/LICENSE'
security:
- password:
  - read

tags:
- name: list
  description: get object list
- name: create
  description: create object
- name: update
  description: update object
- name: delete
  description: delete object
- name: object
  description: get object
- name: util
  description: run utils
- name: file
  description: work with file

paths:
  '/meta/v1/attrTypes':
    get:
      tags:
      - list
      summary: get list of attr types
      description:
        you can get list of attr types
      responses:
        '200':
          description: get list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/attrTypeList'
        '400':
          description: Bad request.
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.

  '/meta/v1/propertyTypes':
    get:
      tags:
      - list
      summary: get list of property types
      description:
        you can get list of property types
      responses:
        '200':
          description: get list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/propertyTypeList'
        '400':
          description: Bad request.
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.

  '/meta/v1/jpClasses':
    get:
      tags:
      - list
      summary: get list of metaClasses
      operationId: getMetaClasses
      description:
        you can get list of metaClasses
      responses:
        '200':
          description: get list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metaClassList'
        '400':
          description: Bad request.
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.

  '/meta/v1/jpClasses/{classCode}':
    get:
      tags:
      - object
      summary: get metaClass
      operationId: getMetaClass
      description:
        you can get metaClass
      parameters:
      - in: path
        name: classCode
        required: true
        schema:
          type: string
          format: string
        description: The metaClass's code
      responses:
        '200':
          description: get metaClass
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metaClass'
        '400':
          description: Bad request.
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A class with the specified code was not found.
        '5XX':
          description: Unexpected error.

  '/meta/v1/jpClasses/{classCode}/csv-export/{bearer}':
    get:
      tags:
      - file
      summary: Download a meta description file in .csv format
      description: Download a meta description file in .csv format, the name of which is built according to the scheme "ClassCode (ClassName).csv"
      parameters:
      - in: path
        name: classCode
        required: true
        schema:
          type: string
          format: string
        description: The metaClass's code
      - in: path
        name: bearer
        required: true
        schema:
          type: string
          format: string
        description: JWT Token
      responses:
        '200':
          description: Файл скачен
        '400':
          description: Bad request.
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A class with the specified code was not found.
        '5XX':
          description: Unexpected error.

components:
  securitySchemes:
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://localhost:8760/qauth2server/auth/token'
          scopes:
            read: allows reading resources

  schemas:
    attrTypeList:
      type: array
      items:
        $ref: '#/components/schemas/attrType'

    attrType:
      type: object
      properties:
        code:
          type: string
          format: string
          example: float
        title:
          type: string
          format: string
          example: Вещественный

    propertyTypeList:
      type: array
      items:
        $ref: '#/components/schemas/propertyType'

    propertyType:
      type: object
      properties:
        code:
          type: string
          format: string
          example: float
        title:
          type: string
          format: string
          example: Вещественный

    metaClassList:
      type: object
      properties:
        totalCount:
          type: number
          format: number
          example: 3
        classes:
          type: array
          items:
            $ref: '#/components/schemas/metaClass'

    metaClass:
      type: object
      required:
      - code
      - qName
      properties:
        code:
          type: string
          format: string
          description: Кодовое имя
          example: mpCompany
        qName:
          type: string
          format: string
          description: Полный код класса
          example: 'mp.mpCompany'
        tags:
          type: array
          description: Теги класса
          items:
            type: string
          example: ["tag1","tag2"]
        name:
          type: string
          format: string
          description: Название класса
          example: "Предприятия  "
        shortName:
          type: string
          format: string
          description: Короткое название класса
          example: "ПРЕД"
        description:
          type: string
          format: string
          description: Описание класса
          example: "Предприятия. Ключевая информация предприятия, контрагента – содержит основные реквизиты предприятия\n    "
        jpPackage:
          type: string
          format: string
          description: Настройки доступа
          example: 'adminAccess'
        guid:
          type: string
          format: string
          description: Глобальный идентификатор
          example: "92566524-c57b-4656-be9b-4357bc56ea08"
        immutable:
          type: boolean
          format: boolean
          description: Признак неизменяемости метаописания
          example: true
        attrs:
          type: array
          description: Список атрибутов класса
          items:
            $ref: '#/components/schemas/metaAttr'

    metaAttr:
      type: object
      required:
      - code
      - type
      - qName
      properties:
        code:
          type: string
          format: string
          description: Кодовое имя атрибута
          example: name
        type:
          type: string
          format: string
          description: Тип атрибута
          example: string
        updatable:
          type: boolean
          description: Признак обновляемости значения атрибута
          example: true
        guid:
          type: string
          format: string
          description: Глобальный идентификатор
          example: '3e4cc29e-9ab4-4cce-86ff-9d4f9a42d923'
        identifier:
          type: boolean
          format: boolean
          description: Признак идентификатора
          example: true
        mandatory:
          type: boolean
          format: boolean
          description: Признак обязательности
          example: true
        qName:
          type: string
          format: string
          description: Полный код атрибута
          example: 'jpClass.className1.PersonalCard.name'
        name:
          type: string
          format: string
          description: Название атрибута
          example: 'Имя гражданина'
        shortName:
          type: string
          format: string
          description: Короткое название атрибута
          example: 'Имя'
        description:
          type: string
          format: string
          description: Описание атрибута
          example: 'Имя гражданина'
        stringFormat:
          type: string
          description: Тип строкового поля (для строковых полей). Код JPStringFormat
          example: snils
        stringMask:
          type: string
          description: Маска строкового поля (для строковых полей)
          example: xxxx
        length:
          type: number
          format: number
          description: Длина (для строковых полей)
          example: 10
        refJpClass:
          type: string
          format: string
          description: Кодовое имя класса, на который ссылается
          example: string
        refJpAttr:
          type: string
          format: string
          description: Кодовое имя атрибута ссылочного класса
          example: string
        signAttr:
          type: string
          format: string
          description: Кодовое имя атрибута, содержащего подпись
        refJpFile:
          type: object
          description: Описание файлового атрибута
          items:
            $ref: '#/components/schemas/jpFile'
          example: {
                "titleAttr": "fileTitle",
                "extAttr": "fileExt",
                "sizeAttr": "sizeAttr",
                "dateAttr": "fileDate",
                "infoAttr": "fileInfo",
            }
        simpleFraction:
          type: object
          description: Настройки простой дроби
          items:
            $ref: '#/components/schemas/jpSimpleFraction'
          example: {
                "integerAttr": "integerPart",
                "denominatorAttr": "denominatorPart"
            }
        money:
          type: object
          description: Настройки денежного
          items:
            $ref: '#/components/schemas/jpMoney'
          example: {
                "currencyCode": "RUB"
            }
        geometry:
          type: object
          description: Настройки пространственного типа
          items:
            $ref: '#/components/schemas/jpGeometry'
          example: {
                "SRID": 3857
            }

    jpFile:
      type: object
      properties:
        titleAttr:
          type: string
          format: string
          description: Кодовое имя атрибута - Заголовок файла
          example: fileTitle
        extAttr:
          type: string
          format: string
          description: Кодовое имя атрибута - Расширение файла
          example: fileExt
        sizeAttr:
          type: string
          format: string
          description: Кодовое имя атрибута - Размер файла
          example: fileSize
        dateAttr:
          type: string
          format: string
          description: Кодовое имя атрибута - Дата файла
          example: fileDate
        infoAttr:
          type: string
          format: string
          description: Кодовое имя атрибута - Дополнительная информация о файле
          example: fileInfo
        fileStampAttr:
          type: string
          format: string
          description: Кодовое имя атрибута - Файл со штампом для подписи
          example: fileStamp

    jpSimpleFraction:
      type: object
      properties:
        integerAttr:
          type: string
          format: string
          description: Атрибут для хранения - Целая часть дроби
          example: integerPart
        denominatorAttr:
          type: string
          format: string
          description: Атрибут для хранения - Знаменатель дроби
          example: denominatorPart

    jpMoney:
      type: object
      properties:
        currencyCode:
          type: string
          format: string
          description: Код валюты
          example: RUB

    jpGeometry:
      type: object
      properties:
        SRID:
          type: integer
          description: ID of the Spatial Reference System
          example: 3857

    jpVirtualPath:
      type: object
      properties:
        refAttrCode:
          type: string
          format: string
          description: Кодовое имя ссылочного атрибута, по которому строится ссылка
        targerAttrCode:
          type: string
          format: string
          description: Кодовое имя целевого атрибута, на который строится ссылка
        virtualType:
          type: string
          format: string
          description: Тип виртуальной ссылки
